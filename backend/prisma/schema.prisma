generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  username      String         @unique
  passwordHash  String
  firstName     String
  lastName      String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  cookedRecipes CookedRecipe[]
  recipes       Recipe[]
  savedRecipes  SavedRecipe[]
}

model Recipe {
  id           Int            @id @default(autoincrement())
  title        String
  description  String?
  imageUrl     String?
  prepTime     Int?
  cookTime     Int?
  servings     Int?
  difficulty   Difficulty     @default(EASY)
  isPublic     Boolean        @default(true)
  ingredients  Json?
  instructions Json?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  userId       Int
  cookedBy     CookedRecipe[]
  user         User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  savedBy      SavedRecipe[]

  @@index([createdAt])
  @@index([difficulty])
  @@index([isPublic])
  @@index([userId])
}

model SavedRecipe {
  id       Int      @id @default(autoincrement())
  savedAt  DateTime @default(now())
  userId   Int
  recipeId Int
  recipe   Recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, recipeId])
  @@index([userId])
}

model CookedRecipe {
  id       Int      @id @default(autoincrement())
  rating   Int?
  notes    String?
  cookedAt DateTime @default(now())
  userId   Int
  recipeId Int
  recipe   Recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([recipeId])
  @@index([userId])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model test_user_table {
  id         BigInt   @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  email      String?
  password   String?
  user_name  String?
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}
